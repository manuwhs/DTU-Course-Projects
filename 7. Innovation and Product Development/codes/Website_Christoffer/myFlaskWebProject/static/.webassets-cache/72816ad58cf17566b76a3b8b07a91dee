V(function (global, factory) {\u000a  if (typeof define === "function" && define.amd) {\u000a    define(["exports"], factory);\u000a  } else if (typeof exports !== "undefined") {\u000a    factory(exports);\u000a  } else {\u000a    var mod = {\u000a      exports: {}\u000a    };\u000a    factory(mod.exports);\u000a    global.HelloWorld = mod.exports;\u000a  }\u000a})(this, function (exports) {\u000a  "use strict";\u000a\u000a  Object.defineProperty(exports, "__esModule", {\u000a    value: true\u000a  });\u000a\u000a  function _classCallCheck(instance, Constructor) {\u000a    if (!(instance instanceof Constructor)) {\u000a      throw new TypeError("Cannot call a class as a function");\u000a    }\u000a  }\u000a\u000a  var _createClass = function () {\u000a    function defineProperties(target, props) {\u000a      for (var i = 0; i < props.length; i++) {\u000a        var descriptor = props[i];\u000a        descriptor.enumerable = descriptor.enumerable || false;\u000a        descriptor.configurable = true;\u000a        if ("value" in descriptor) descriptor.writable = true;\u000a        Object.defineProperty(target, descriptor.key, descriptor);\u000a      }\u000a    }\u000a\u000a    return function (Constructor, protoProps, staticProps) {\u000a      if (protoProps) defineProperties(Constructor.prototype, protoProps);\u000a      if (staticProps) defineProperties(Constructor, staticProps);\u000a      return Constructor;\u000a    };\u000a  }();\u000a\u000a  function _possibleConstructorReturn(self, call) {\u000a    if (!self) {\u000a      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");\u000a    }\u000a\u000a    return call && (typeof call === "object" || typeof call === "function") ? call : self;\u000a  }\u000a\u000a  function _inherits(subClass, superClass) {\u000a    if (typeof superClass !== "function" && superClass !== null) {\u000a      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);\u000a    }\u000a\u000a    subClass.prototype = Object.create(superClass && superClass.prototype, {\u000a      constructor: {\u000a        value: subClass,\u000a        enumerable: false,\u000a        writable: true,\u000a        configurable: true\u000a      }\u000a    });\u000a    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\u000a  }\u000a\u000a  var HelloWorld = exports.HelloWorld = function (_React$Component) {\u000a    _inherits(HelloWorld, _React$Component);\u000a\u000a    function HelloWorld() {\u000a      _classCallCheck(this, HelloWorld);\u000a\u000a      return _possibleConstructorReturn(this, (HelloWorld.__proto__ || Object.getPrototypeOf(HelloWorld)).apply(this, arguments));\u000a    }\u000a\u000a    _createClass(HelloWorld, [{\u000a      key: "render",\u000a      value: function render() {\u000a        return React.createElement(\u000a          "div",\u000a          { className: "helloworld" },\u000a          "Hello ",\u000a          this.props.name\u000a        );\u000a      }\u000a    }]);\u000a\u000a    return HelloWorld;\u000a  }(React.Component);\u000a});
p1
.